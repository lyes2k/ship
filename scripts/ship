#!/bin/bash

CONFIG_FILE="$HOME/.shiprc"
HOST_DIR="/home/$USER/hosted"
TEMPLATE="/etc/nginx/sites-available/react-template"

load_config() {
    if [ ! -f "$CONFIG_FILE" ]; then
        echo '{"default_domain": "", "email": "", "deployments": {}}' > "$CONFIG_FILE"
    fi
    DEFAULT_DOMAIN=$(jq -r '.default_domain' "$CONFIG_FILE")
    EMAIL=$(jq -r '.email' "$CONFIG_FILE")
}

set_default_domain() {
    local domain="$1"
    jq --arg domain "$domain" '.default_domain = $domain' "$CONFIG_FILE" > "$CONFIG_FILE.tmp" && mv "$CONFIG_FILE.tmp" "$CONFIG_FILE"
    echo "‚úÖ Default domain set to: $domain"
}

set_email() {
    local email="$1"
    jq --arg email "$email" '.email = $email' "$CONFIG_FILE" > "$CONFIG_FILE.tmp" && mv "$CONFIG_FILE.tmp" "$CONFIG_FILE"
    echo "‚úÖ Email set to: $email"
}

update_deployment_date() {
    local fqdn="$1"
    local date=$(date +%Y-%m-%d)
    jq --arg fqdn "$fqdn" --arg date "$date" '.deployments[$fqdn] = $date' "$CONFIG_FILE" > "$CONFIG_FILE.tmp" && mv "$CONFIG_FILE.tmp" "$CONFIG_FILE"
}

remove_deployment_entry() {
    local fqdn="$1"
    jq "del(.deployments[\"$fqdn\"])" "$CONFIG_FILE" > "$CONFIG_FILE.tmp" && mv "$CONFIG_FILE.tmp" "$CONFIG_FILE"
}

list_deployments() {
    jq -r '.deployments | to_entries[] | "\(.key) - last SSL renewal: \(.value)"' "$CONFIG_FILE"
}

usage() {
    echo "Usage: ship [-s subdomain] [-d domain] [-c] [-r] [--set-default-domain domain] [--set-email email] [--list] [-h]"
    echo
    echo "Options:"
    echo "  -s <subdomain>          Specify subdomain (optional for deploy, required for -c/-r)"
    echo "  -d <domain>             Specify base domain (optional if default is set)"
    echo "  -c                      Renew SSL certificate"
    echo "  -r                      Remove deployment"
    echo "  --set-default-domain X  Set default base domain"
    echo "  --set-email X           Set email for Let's Encrypt"
    echo "  --list                  List all deployments and last SSL renewal date"
    echo "  -h                      Show help"
    exit 0
}

ACTION="deploy"
while [[ $# -gt 0 ]]; do
    case "$1" in
        -s) SUBDOMAIN="$2"; shift 2 ;;
        -d) BASE_DOMAIN="$2"; shift 2 ;;
        -c) ACTION="renew"; shift ;;
        -r) ACTION="remove"; shift ;;
        --set-default-domain) set_default_domain "$2"; exit 0 ;;
        --set-email) set_email "$2"; exit 0 ;;
        --list) list_deployments; exit 0 ;;
        -h) usage ;;
        *) usage ;;
    esac
done

load_config

if [ -z "$BASE_DOMAIN" ]; then
    if [ -n "$DEFAULT_DOMAIN" ] && [ "$DEFAULT_DOMAIN" != "null" ] && [ "$DEFAULT_DOMAIN" != "" ]; then
        BASE_DOMAIN="$DEFAULT_DOMAIN"
    else
        echo "‚ùå No base domain provided and no default set. Use -d or --set-default-domain."
        exit 1
    fi
fi

if [ -z "$EMAIL" ] || [ "$EMAIL" = "null" ]; then
    echo "‚ùå No email set for Let's Encrypt. Use: ship --set-email you@example.com"
    exit 1
fi

if [ -z "$SUBDOMAIN" ] && [ "$ACTION" = "deploy" ]; then
    SUBDOMAIN=$(tr -dc a-z0-9 </dev/urandom | head -c 6)
fi

if { [ "$ACTION" = "renew" ] || [ "$ACTION" = "remove" ]; } && [ -z "$SUBDOMAIN" ]; then
    echo "‚ùå -s <subdomain> is required for $ACTION"
    exit 1
fi

FQDN="$SUBDOMAIN.$BASE_DOMAIN"
TARGET_DIR="$HOST_DIR/$SUBDOMAIN"
NGINX_CONF="/etc/nginx/sites-available/$SUBDOMAIN.conf"

if [ "$ACTION" = "renew" ]; then
    if [ ! -d "/etc/letsencrypt/live/$FQDN" ]; then
        echo "‚ùå No certificate found for $FQDN"
        exit 1
    fi
    echo "üîÑ Renewing SSL certificate for $FQDN..."
    sudo certbot renew --cert-name "$FQDN" --force-renewal
    update_deployment_date "$FQDN"
    echo "‚úÖ Certificate renewed."
    exit 0
fi

if [ "$ACTION" = "remove" ]; then
    echo "üóë Removing deployment for $FQDN..."
    sudo rm -rf "$TARGET_DIR"
    sudo rm -f "$NGINX_CONF" "/etc/nginx/sites-enabled/$SUBDOMAIN.conf"
    sudo nginx -t && sudo systemctl reload nginx
    remove_deployment_entry "$FQDN"
    echo "‚úÖ Deployment removed."
    exit 0
fi

if [ ! -d "./dist" ]; then
    echo "‚ùå No dist folder found in current directory."
    exit 1
fi

if [ -d "$TARGET_DIR" ] && [ -f "$NGINX_CONF" ]; then
    echo "‚ôªÔ∏è  Updating existing deployment for $FQDN..."
    rsync -av --delete ./dist/ "$TARGET_DIR/"
    sudo nginx -t && sudo systemctl reload nginx
    echo "‚úÖ Updated at: https://$FQDN"
    exit 0
fi

echo "üöÄ Deploying new site: $FQDN"
mkdir -p "$TARGET_DIR"
rsync -av --delete ./dist/ "$TARGET_DIR/"

sudo sed "s/SUBDOMAIN/$SUBDOMAIN/g; s/BASEDOMAIN/$BASE_DOMAIN/g" "$TEMPLATE" | sudo tee "$NGINX_CONF" >/dev/null
sudo ln -sf "$NGINX_CONF" /etc/nginx/sites-enabled/
sudo nginx -t && sudo systemctl reload nginx

if [ ! -d "/etc/letsencrypt/live/$FQDN" ]; then
    echo "üîê Requesting Let's Encrypt certificate..."
    sudo certbot --nginx \
        -d "$FQDN" \
        --non-interactive --agree-tos -m "$EMAIL" --redirect
else
    echo "üîê SSL certificate already exists, skipping request."
fi

update_deployment_date "$FQDN"
echo "‚úÖ Project deployed at: https://$FQDN"
